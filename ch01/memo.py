#TensorFlowを使って、損失データと精度の可視化ができる
#vscodeでは、command + shift + P


#=================================================
#精度の向上を目指す
#=================================================

#1.隠れ層の追加
#2.ドロップアウトを使用(学習データの精度は、評価データの精度を超えるべき)
#→改善方法として、学習回数を大幅に増やす。エポック数の増減で変化が見られなくなったら改善の余地なし
#3.最適化アルゴリズムの変更
#4.ドロップアウト率を変更
#5.学習エポック数の増加(非推奨)
#6.学習率を変更(デフォルト設定の0.001日回値が良い可能性が高い。(経験則))
#7.内部隠れ層の増加(非推奨)
#8.バッチ計算サイズの増加

#非推奨な理由として、
# 1)モデルが複雑になりがち
# 2)多くの計算時間が必要

#損失の増減を見た場合に、検証データの損失が一旦下がってから増加するということが見られたら
#過学習だと判断し、正則化を使う。

#==================================================
#更に便利な使いかた
#==================================================

#L1, L2　正則化
#from keras import regularizers
#model.add(Dense(64, input_dim=64, 
#          kernel_regularizer=regularizers.l2(0.01)))

#出力について

#損失の値を計算する時に使う
#model.evaluate()

#出力カテゴリを計算して使用する
#model.predict_classes()

#クラス確率を計算して使用する
#model.predict_proba()

